plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id "org.jlleitschuh.gradle.ktlint" version "9.4.1"

}

group 'com.lwise'
version '0.0.1'

repositories {
    mavenCentral()
    maven { url 'https://m2.dv8tion.net/releases' }
    maven { url 'https://jitpack.io' }
}

compileKotlin {
    kotlinOptions {
        allWarningsAsErrors = true
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.lwise.MeowBotKt'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        kotlin.srcDir "$projectDir/src/integrationTest/groovy"
        resources.srcDir "$projectDir/src/integrationTest/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation "com.oracle.ojdbc:ojdbc8:19.3.0.0"
    implementation "io.github.cdimascio:dotenv-kotlin:6.2.2"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.0'
    implementation 'com.discord4j:discord4j-core:3.2.1'
    implementation 'ch.qos.logback:logback-classic:1.2.7'
    implementation 'org.postgresql:postgresql:42.3.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation 'com.github.walkyst:lavaplayer-fork:1.3.97'
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.0.0'
    compile 'org.json:json:20210307'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.1')

    integrationTestCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'

}

task integrationTest(type: Test) {
    description = "Runs integration tests."
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    useJUnitPlatform()
}
